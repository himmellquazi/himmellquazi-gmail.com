var web = {runFmenu: true, started: false};
var floatingMenu = {
        hasInner: "number" == typeof window.innerWidth,
        hasElement: "object" == typeof document.documentElement && "number" == typeof document.documentElement.clientWidth
    },
    floatingArray = [];
floatingMenu.add = function(e, t) {
    var n, o;
    "string" == typeof e ? n = e : o = e, floatingArray.push(void 0 == t ? {
        id: n,
        menu: o,
        targetLeft: 0,
        targetTop: 0,
        distance: .07,
        snap: !0,
        updateParentHeight: !1
    } : {
        id: n,
        menu: o,
        targetLeft: t.targetLeft,
        targetRight: t.targetRight,
        targetTop: t.targetTop,
        targetBottom: t.targetBottom,
        centerX: t.centerX,
        centerY: t.centerY,
        prohibitXMovement: t.prohibitXMovement,
        prohibitYMovement: t.prohibitYMovement,
        distance: void 0 != t.distance ? t.distance : .07,
        snap: t.snap,
        ignoreParentDimensions: t.ignoreParentDimensions,
        updateParentHeight: void 0 == t.updateParentHeight ? !1 : t.updateParentHeight,
        scrollContainer: t.scrollContainer,
        scrollContainerId: t.scrollContainerId,
        confinementArea: t.confinementArea,
        confinementAreaId: void 0 != t.confinementArea && "#" == t.confinementArea.substring(0, 1) ? t.confinementArea.substring(1) : void 0,
        confinementAreaClassRegexp: void 0 != t.confinementArea && "." == t.confinementArea.substring(0, 1) ? new RegExp("(^|\\s)" + t.confinementArea.substring(1) + "(\\s|$)") : void 0
    })
}, floatingMenu.findSingle = function(e) {
    e.id && (e.menu = document.getElementById(e.id)), e.scrollContainerId && (e.scrollContainer = document.getElementById(e.scrollContainerId))
}, floatingMenu.move = function(e) {
    e.prohibitXMovement || (e.menu.style.left = e.nextX + "px", e.menu.style.right = ""), e.prohibitYMovement || (e.menu.style.top = e.nextY + "px", e.menu.style.bottom = "")
}, floatingMenu.scrollLeft = function(e) {
    if (e.scrollContainer) return e.scrollContainer.scrollLeft;
    var t = window.top;
    return this.hasInner ? t.pageXOffset : this.hasElement ? t.document.documentElement.scrollLeft : t.document.body.scrollLeft
}, floatingMenu.scrollTop = function(e) {
    if (e.scrollContainer) return e.scrollContainer.scrollTop;
    var t = window.top;
    return this.hasInner ? t.pageYOffset : this.hasElement ? t.document.documentElement.scrollTop : t.document.body.scrollTop
}, floatingMenu.windowWidth = function() {
    return this.hasElement ? document.documentElement.clientWidth : document.body.clientWidth
}, floatingMenu.windowHeight = function() {
    return floatingMenu.hasElement && floatingMenu.hasInner ? document.documentElement.clientHeight > window.innerHeight ? window.innerHeight : document.documentElement.clientHeight : floatingMenu.hasElement ? document.documentElement.clientHeight : document.body.clientHeight
}, floatingMenu.documentHeight = function() {
    var e = this.hasInner ? window.innerHeight : 0,
        t = document.body,
        n = document.documentElement;
    return Math.max(t.scrollHeight, t.offsetHeight, n.clientHeight, n.scrollHeight, n.offsetHeight, e)
}, floatingMenu.documentWidth = function() {
    var e = this.hasInner ? window.innerWidth : 0,
        t = document.body,
        n = document.documentElement;
    return Math.max(t.scrollWidth, t.offsetWidth, n.clientWidth, n.scrollWidth, n.offsetWidth, e)
}, floatingMenu.calculateCornerX = function(e) {
    var t = e.menu.offsetWidth,
        n = this.scrollLeft(e) - e.parentLeft;
    return n += e.centerX ? (this.windowWidth() - t) / 2 : void 0 == e.targetLeft ? this.windowWidth() - e.targetRight - t : e.targetLeft, document.body != e.menu.parentNode && n + t >= e.confinedWidthReserve && (n = e.confinedWidthReserve - t), 0 > n && (n = 0), n
}, floatingMenu.calculateCornerY = function(e) {
    var t = e.menu.offsetHeight,
        n = this.scrollTop(e) - e.parentTop;
    return n += e.centerY ? (this.windowHeight() - t) / 2 : void 0 === e.targetTop ? this.windowHeight() - e.targetBottom - t : e.targetTop, document.body != e.menu.parentNode && n + t >= e.confinedHeightReserve && (n = e.confinedHeightReserve - t), 0 > n && (n = 0), n
}, floatingMenu.isConfinementArea = function(e, t) {
    return void 0 != e.confinementAreaId && t.id == e.confinementAreaId || void 0 != e.confinementAreaClassRegexp && t.className && e.confinementAreaClassRegexp.test(t.className)
}, floatingMenu.computeParent = function(e) {
    if (e.ignoreParentDimensions) return e.confinedHeightReserve = this.documentHeight(), e.confinedWidthReserver = this.documentWidth(), e.parentLeft = 0, void(e.parentTop = 0);
    var t = e.menu.parentNode,
        n = this.offsets(t, e);
    e.parentLeft = n.left, e.parentTop = n.top, e.confinedWidthReserve = t.clientWidth;
    var o = t,
        i = this.offsets(o, e);
    if (void 0 == e.confinementArea)
        for (; o.clientHeight + i.top < e.menu.scrollHeight + n.top || e.menu.parentNode == o && e.updateParentHeight && o.clientHeight + i.top == e.menu.scrollHeight + n.top;) o = o.parentNode, i = this.offsets(o, e);
    else
        for (; void 0 != o.parentNode && !this.isConfinementArea(e, o);) o = o.parentNode, i = this.offsets(o, e);
    e.confinedHeightReserve = o.clientHeight - (n.top - i.top)
}, floatingMenu.offsets = function(e, t) {
    var n = {
        left: 0,
        top: 0
    };
    if (e !== t.scrollContainer) {
        for (; e.offsetParent && e.offsetParent != t.scrollContainer;) n.left += e.offsetLeft, n.top += e.offsetTop, e = e.offsetParent;
        if (window == window.top) return n;
        for (var o = window.top.document.body.getElementsByTagName("IFRAME"), i = 0; i < o.length; i++)
            if (o[i].contentWindow == window)
                for (e = o[i]; e.offsetParent;) n.left += e.offsetLeft, n.top += e.offsetTop, e = e.offsetParent;
        return n
    }
}, floatingMenu.doFloatSingle = function(e) {
    if(web.runFmenu === false){if(web.started === true){return;}}
    this.findSingle(e), e.updateParentHeight && (e.menu.parentNode.style.minHeight = e.menu.scrollHeight + "px");
    var t, n;
    this.computeParent(e);
    var o = this.calculateCornerX(e),
        t = (o - e.nextX) * e.distance;
    (Math.abs(t) < .5 && e.snap || Math.abs(o - e.nextX) <= 1) && (t = o - e.nextX);
    var i = this.calculateCornerY(e),
        n = (i - e.nextY) * e.distance;
    (Math.abs(n) < .5 && e.snap || Math.abs(i - e.nextY) <= 1) && (n = i - e.nextY), (Math.abs(t) > 0 || Math.abs(n) > 0) && (e.nextX += t, e.nextY += n, this.move(e))
}, floatingMenu.fixTargets = function() {}, floatingMenu.fixTarget = function() {}, floatingMenu.doFloat = function() {
    this.fixTargets();
    for (var e = 0; e < floatingArray.length; e++) this.fixTarget(floatingArray[e]), this.doFloatSingle(floatingArray[e]);
    setTimeout("floatingMenu.doFloat()", 20)
}, floatingMenu.insertEvent = function(e, t, n) {
    if (void 0 != e.addEventListener) return void e.addEventListener(t, n, !1);
    var o = "on" + t;
    if (void 0 != e.attachEvent) return void e.attachEvent(o, n);
    var i = e[o];
    e[o] = function(e) {
        e = e ? e : window.event;
        var t = n(e);
        return void 0 != i && 1 == i(e) && 1 == t
    }
}, floatingMenu.init = function() {
    web.started = true;
    floatingMenu.fixTargets();
    for (var e = 0; e < floatingArray.length; e++) floatingMenu.initSingleMenu(floatingArray[e]);
    setTimeout("floatingMenu.doFloat()", 100);
}, floatingMenu.initSingleMenu = function(e) {
    this.findSingle(e), this.computeParent(e), this.fixTarget(e), e.nextX = this.calculateCornerX(e), e.nextY = this.calculateCornerY(e), this.move(e)
}, floatingMenu.insertEvent(window, "load", floatingMenu.init), "undefined" != typeof jQuery && ! function(e) {
    e.fn.addFloating = function(e) {
        return this.each(function() {
            floatingMenu.add(this, e)
        })
    }
}(jQuery);